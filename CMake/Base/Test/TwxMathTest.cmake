#[===============================================[/*
This is part of the TWX build and test system.
https://github.com/TeXworks/texworks
(C)  JL 2023
*/
/** @file
  * @brief TwxMathLib test suite.
  *
  *//*
#]===============================================]

if ( DEFINED //CMake/Include/Test/TwxMathTest.cmake )
  return ()
endif ()

set ( //CMake/Include/Test/TwxMathTest.cmake ON )

message ( STATUS "TwxMathLib test...")

include ( "${CMAKE_CURRENT_LIST_DIR}/../TwxMathLib.cmake")

block ()

set ( CMAKE_MESSAGE_LOG_LEVEL TRACE )
list ( APPEND CMAKE_MESSAGE_CONTEXT Math )
set ( CMAKE_MESSAGE_CONTEXT_SHOW ON )

message ( STATUS "twx_math_compare" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT assert )
twx_math_compare ( "2+2" IN_VAR ans )
if ( NOT "${ans}" EQUAL "4" )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "1<2" IN_VAR ans )
if ( NOT ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "1<=2" IN_VAR ans )
if ( NOT ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "1=2" IN_VAR ans )
if ( ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "1==2" IN_VAR ans )
if ( ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "1>=2" IN_VAR ans )
if ( ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "1>2" IN_VAR ans )
if ( ans )
  message ( FATAL_ERROR "FAILED" )
endif ()

twx_math_compare ( "2<2" IN_VAR ans )
if ( ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "2<=2" IN_VAR ans )
if ( NOT ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "2=2" IN_VAR ans )
if ( NOT ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "2==2" IN_VAR ans )
if ( NOT ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "2>=2" IN_VAR ans )
if ( NOT ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "2>2" IN_VAR ans )
if ( ans )
  message ( FATAL_ERROR "FAILED" )
endif ()

twx_math_compare ( "3<2" IN_VAR ans )
if ( ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "3<=2" IN_VAR ans )
if ( ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "3=2" IN_VAR ans )
if ( ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "3==2" IN_VAR ans )
if ( ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "3>=2" IN_VAR ans )
if ( NOT ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math_compare ( "3>2" IN_VAR ans )
if ( NOT ans )
  message ( FATAL_ERROR "FAILED" )
endif ()

endblock ()

message ( STATUS "twx_math" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT assert )
twx_math ( EXPR ans "2+2" )
if ( NOT "${ans}" EQUAL "4" )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math ( EXPR ans "2+2" OUTPUT_FORMAT HEXADECIMAL )
# message ( "ans => ${ans}" )
if ( NOT "${ans}" EQUAL "0x4" )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math ( EXPR ans "1<2" )
if ( NOT ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math ( EXPR ans "(1<2)" )
if ( NOT ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math ( EXPR ans "((1<2))" )
if ( NOT ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math ( EXPR ans "(1<2)&(2<3)" )
if ( NOT ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math ( EXPR ans "(1<2)&(2>3)" )
if ( ans )
  message ( FATAL_ERROR "FAILED" )
endif ()
twx_math ( EXPR ans "(1<2)|(2>3)" )
if ( NOT ans )
  message ( FATAL_ERROR "FAILED" )
endif ()

endblock ()

endblock ()

message ( STATUS "TwxMathLib test... DONE")

#/*
