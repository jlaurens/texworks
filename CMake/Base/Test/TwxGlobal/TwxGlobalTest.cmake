#[===============================================[/*
This is part of the TWX build and test system.
https://github.com/TeXworks/texworks
(C)  JL 2023
*/
/** @file
  * @brief TwxGlobalLib test suite.
  *
  *//*
#]===============================================]

include_guard ( GLOBAL )

message ( STATUS "TwxGlobalLib test...")

include ( "${CMAKE_CURRENT_LIST_DIR}/../../TwxGlobalLib.cmake" )

include ( "${CMAKE_CURRENT_LIST_DIR}/../TwxTree/TwxTreeTest.cmake" )

block ()
twx_test_suite_will_begin ()

twx_tree_init ( expected.empty/ )
twx_tree_init ( expected.key/ )
twx_tree_set ( TREE expected.key/ key=value )
twx_tree_init ( expected.key.empty/ )
twx_tree_set ( TREE expected.key.empty/ key=${expected.empty/} )
twx_tree_init ( expected.key.key.key/ )
twx_tree_set ( TREE expected.key.key.key/ key/key/key=value )


message ( STATUS "twx_global_save/restore" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT save/restore )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  unset ( TwxGlobalTest.tree/ )
  twx_global_restore ( IN_TREE TwxGlobalTest.tree/ )
  twx_tree_assert ( TwxGlobalTest.tree/ )
  twx_assert_true ( TWX_IS_TREE_TwxGlobalTest.tree/ )
  twx_expect ( TwxGlobalTest.tree/ "${expected.empty/}" )
  twx_global_save ( TREE expected.key/ )
  unset ( TwxGlobalTest.tree/ )
  unset ( TWX_IS_TREE_TwxGlobalTest.tree/ )
  twx_global_restore ( IN_TREE TwxGlobalTest.tree/ )
  twx_tree_assert ( TwxGlobalTest.tree/ )
  twx_assert_true ( "${TWX_IS_TREE_TwxGlobalTest.tree/}" )

endif ()
twx_test_fatal_assert_passed ()
endblock ()

message ( STATUS "Test twx_global_set/1" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT set/1 )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  set ( tree/ "dummy" )
  twx_global_restore ( IN_TREE tree/ )
  twx_expect ( tree/ "${TWX_TREE_HEADER}" )
  twx_test_fatal ()
  twx_global_set ( key=value )
  twx_test_fatal_assert_passed ()
  twx_global_restore ( IN_TREE tree/ )
  twx_expect ( tree/ "${TWX_TREE_HEADER}${TWX_TREE_RECORD}key${TWX_TREE_SEP}value" )
endif ()
twx_test_fatal_assert_passed ()
endblock ()

message ( STATUS "Test twx_global_get/0" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT get/0 )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  set ( A/k dummy )
  twx_assert_defined ( A/k )
  twx_global_get ( IN_TREE A KEY k )
  twx_assert_undefined ( A/k )
endif ()
twx_test_fatal_assert_passed ()
endblock()

message ( STATUS "Test twx_global_get/1" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT set/1 )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  twx_global_restore ( IN_TREE tree/ )
  twx_expect ( tree/ "${TWX_TREE_HEADER}" )
  twx_global_set ( key=value )
  twx_test_fatal_assert_passed ()
  twx_global_restore ( IN_TREE tree/ )
  twx_expect ( tree/ "${TWX_TREE_HEADER}${TWX_TREE_RECORD}key${TWX_TREE_SEP}value" )
  
  twx_global_get ( IN_TREE tree/ KEY key )
  twx_expect ( tree/key "value" )
  twx_global_get ( IN_TREE tree/ KEY key )
  twx_expect ( tree/key "value" )
  twx_global_get ( IN_TREE tree KEY key )
  twx_expect ( tree/key "value" )
endif ()
twx_test_fatal_assert_passed ()
endblock ()

message ( STATUS "Test twx_global_remove/0" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT remove/0 )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  twx_global_set ( k=v )
  twx_global_remove ( k )
  set ( A/k "dummy" )
  twx_assert_defined ( A/k )
  twx_global_get ( IN_TREE A KEY k )
  twx_assert_undefined ( A/k )
endif ()
twx_test_fatal_assert_passed ()
endblock()

message ( STATUS "Test twx_global_set/remove/1" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT set/remove/1 )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  twx_global_set ( key=value )
  twx_regex_escape ( "key" IN_VAR scp_key_ )
  twx_expect ( scp_key_ "key" )
  twx_global_restore ( IN_TREE tree/ )
  twx_expect_matches ( "${tree/}" "${TWX_TREE_RECORD}(${scp_key_})${TWX_TREE_SEP}([^${TWX_TREE_RECORD}]*)$" )
  twx_global_remove ( key )
  twx_global_restore ( IN_TREE tree/ )
  twx_expect ( tree/ "${TWX_TREE_HEADER}" )
endif ()
twx_test_fatal_assert_passed ()
endblock ()

message ( STATUS "Test twx_global_set/2" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT set/2 )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  block ( PROPAGATE actual/)
    twx_global_set ( key/key=value )
    twx_global_restore ( IN_TREE actual/ )
  endblock ()
  block ( PROPAGATE expected/)
    twx_global_set ( key/key=value )
    twx_tree_init ( A/ )
    twx_tree_set ( TREE A/ key=value )
    twx_global_set ( key=${A/} )
    twx_global_restore ( IN_TREE expected/ )
  endblock ()
  twx_expect ( actual/ "${expected/}" )
endif ()
twx_test_fatal_assert_passed ()
endblock ()

message ( STATUS "Test twx_global_set/3" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT set/2 )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  twx_global_set ( key=value )
  twx_global_set ( key=other_value )
  twx_global_restore ( IN_TREE A/ )
  twx_expect ( A/ "${TWX_TREE_HEADER}${TWX_TREE_RECORD}key${TWX_TREE_SEP}other_value" )
endif ()
twx_test_fatal_assert_passed ()
endblock ()

message ( STATUS "Test twx_global_set/get/0" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT TWX_TREE )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  set ( A/k "dummy" )
  twx_assert_defined ( A/k )
  twx_global_get ( IN_TREE A KEY k )
  twx_assert_undefined ( A/k )
  twx_global_set ( k=v )
  twx_global_get ( IN_TREE A KEY k )
  twx_expect ( A/k "v" )
endif ()
twx_test_fatal_assert_passed ()
endblock()

message ( STATUS "Test twx_global_set/get/1" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT set/get/1 )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  twx_global_set ( key=value )
  set ( tree/key "dummy" )
  twx_global_get ( IN_TREE tree KEY key )
  twx_expect ( tree/key "value" )
  twx_assert_undefined ( TWX_IS_TREE_tree/key )
endif ()
twx_test_fatal_assert_passed ()
endblock ()

message ( STATUS "Test twx_global_set/get/2" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT set/get/2 )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  twx_global_set ( k/kk/kkk=value )
  set ( tree/k/kk/kkk dummy )
  set ( TWX_IS_TREE_tree/k/kk/kkk dummy )
  twx_global_get ( IN_TREE tree KEY k/kk/kkk )
  twx_expect ( tree/k/kk/kkk "value" )
  twx_assert_undefined ( TWX_IS_TREE_tree/k/kk/kkk )
  twx_tree_init ( expected/ )
  twx_tree_set ( TREE expected/ kkk=value )
  set ( tree/k/kk/ dummy )
  twx_global_get ( IN_TREE tree KEY k/kk )
  unset ( tree/k/ )
  twx_global_get ( IN_TREE tree KEY k )
  # message ( TR@CE "tree/k => \"${tree/k}\"" )
  twx_tree_init ( expected/ )
  twx_tree_set ( TREE expected/ kk/kkk=value )
  # message ( TR@CE "expected/ => \"${expected/}\"" )
  twx_expect ( tree/k "${expected/}" )
endif ()
twx_test_fatal_assert_passed ()
endblock ()

message ( STATUS "Test twx_global_remove/1" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT set/2 )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  twx_global_remove ( what ever )
  twx_global_restore ( IN_TREE tree/ )
  twx_tree_init ( expected/ )
  twx_expect ( tree/ "${expected/}" )
endif ()
twx_test_fatal_assert_passed ()
endblock ()

message ( STATUS "Test twx_global_remove/2" )
block ()
twx_test_fatal_assert_passed ()
list ( APPEND CMAKE_MESSAGE_CONTEXT set/2 )
if ( TRUE )
  twx_global_clear ()
  twx_global_set ( key=value )
  twx_global_remove ( key what ever )
  twx_global_restore ( IN_TREE actual/ )
  twx_tree_init ( expected/ )
  twx_expect ( actual/ "${expected/}" )
endif ()
twx_test_fatal_assert_passed ()
endblock ()

message ( STATUS "Test twx_global_remove/3" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT remove/3 )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  twx_global_set ( key/key/key=value )
  twx_global_remove ( what ever key )
  set ( actual/key dummy )
  twx_global_get ( IN_TREE actual/ KEY key )
  twx_assert_undefined ( actual/key )
endif ()
twx_test_fatal_assert_passed ()
endblock ()

message ( STATUS "Test twx_global_remove/4" )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT remove/4 )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  twx_global_set ( key/key/key=value )
  twx_global_remove ( key/key )
  twx_global_restore ( IN_TREE A/ )
  twx_expect ( A/ "${expected.key.empty/}" )
  twx_global_get ( IN_TREE A KEY key/key )
  twx_assert_undefined ( A/key/key )
  twx_global_get ( IN_TREE A KEY key )
  twx_expect ( A/key "${expected.empty/}" )
endif ()
twx_test_fatal_assert_passed ()
endblock ()

message ( STATUS "Test twx_global_..." )
block ()
list ( APPEND CMAKE_MESSAGE_CONTEXT ... )
twx_test_fatal_assert_passed ()
if ( TRUE )
  twx_global_clear ()
  twx_global_set ( k1/k1=v11 k1/k2=v12 k2/k1=v21 k2/k2=v22 k3=v3 k4=v4 )
  twx_global_log ( )
  # block ()
  #   twx_global_prettify ( IN_VAR pretty )
  #   # message ( TR@CE "GLOBAL => ${pretty}")
  # endblock ()
  unset ( A/k1 )
  unset ( TWX_IS_TREE_A/k1 )
  twx_global_get ( IN_TREE A/ KEY k1 )
  twx_assert_defined ( A/k1 )
  twx_assert_true ( "${TWX_IS_TREE_A/k1}" )
  twx_tree_assert ( A/k1 )
  unset ( A/k1/k1 )
  twx_tree_get ( TREE A/k1 KEY k1 )
  twx_expect ( A/k1/k1 "v11" )
  unset ( A/k1/k2 )
  twx_tree_get ( TREE A/k1 KEY k2 )
  twx_expect ( A/k1/k2 "v12" )
  unset ( A/k2 )
  unset ( TWX_IS_TREE_A/k2 )
  twx_global_get ( IN_TREE A/ KEY k2 )
  twx_assert_defined ( A/k2 )
  twx_assert_true ( "${TWX_IS_TREE_A/k2}" )
  twx_tree_assert ( A/k2 )
  unset ( A/k2/k1 )
  twx_tree_get ( TREE A/k2 KEY k1 )
  twx_expect ( A/k2/k1 "v21" )
  unset ( A/k2/k2 )
  twx_tree_get ( TREE A/k2 KEY k2 )
  twx_expect ( A/k2/k2 "v22" )
endif ()
twx_test_fatal_assert_passed ()
endblock ()

twx_test_suite_did_end ()
endblock ()

message ( STATUS "TwxGlobalLib test...")

#*/
