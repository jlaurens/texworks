#[===============================================[/*
This is part of the TWX build and test system.
https://github.com/TeXworks/texworks
(C)  JL 2023
*/
/** @file
  * @brief TwxIncrementLib test suite.
  *
  *//*
#]===============================================]

include_guard ( GLOBAL )

twx_test_suite_push ()
block ()

twx_test_unit_push ( NAME "twx_increment" CORE increment )
if ( TWX_TEST_UNIT.RUN )
  block ()
  set ( i 123 )
  twx_assert_compare ( ${i} == 123 )
  twx_increment ( VAR i )
  twx_assert_compare ( ${i} == 124 )
  twx_increment ( VAR i STEP 2 )
  twx_assert_compare ( ${i} == 126 )
  twx_increment ( VAR i STEP -1 )
  twx_assert_compare ( ${i} == 125 )
  set ( TWX_FATAL_CATCH ON )
  twx_fatal_clear ()
  twx_increment ( )
  twx_fatal_catched ( IN_VAR v )
  if ( v STREQUAL "" )
    message ( FATAL_ERROR "FAILURE" )
  endif ()
  twx_fatal_clear ()
  twx_increment ( VAR )
  twx_fatal_catched ( IN_VAR v )
  if ( v STREQUAL "" )
    message ( FATAL_ERROR "FAILURE" )
  endif ()
  twx_fatal_clear ()
  twx_increment ( VAR i STEP )
  twx_fatal_catched ( IN_VAR v )
  if ( v STREQUAL "" )
    message ( FATAL_ERROR "FAILURE" )
  endif ()
  twx_fatal_clear ()
  twx_increment ( VAR i STEP 2 3 )
  twx_fatal_catched ( IN_VAR v )
  if ( v STREQUAL "" )
    message ( FATAL_ERROR "FAILURE" )
  endif ()
  twx_fatal_clear ()
  endblock ()
endif ()
twx_test_unit_pop ()

twx_test_unit_push ( NAME "twx_break_if" CORE break_if )
if ( TWX_TEST_UNIT.RUN )
  block ()
  twx_test_simple_start ( "i=100" )
  set ( i 100 )
  while (true )
    twx_break_if ( ${i} < 1000 )
    set ( i 1000 )
    break ()
  endwhile ()
  # message ( TR@CE "X" )
  twx_assert_compare ( ${i} == 100 )
  twx_test_simple_assert_pass ()
  twx_test_simple_start ( "i=1000" )
  set ( i 100 )
  while (true )
    twx_break_if ( ${i} > 1000 )
    set ( i 1000 )
    break ()
  endwhile ()
  # message ( TR@CE "XX ${i} " )
  twx_assert_compare ( ${i} == 1000 )
  # message ( TR@CE "XXX" )
  twx_test_simple_assert_pass ()
  twx_test_simple_start ( "FORBIDDEN_EXTRA_ARGUMENT" )
  # message ( TR@CE "XXX" )
  while (true )
    twx_break_if ( ${i} == 1000 FORBIDDEN_EXTRA_ARGUMENT )
    break ()
  endwhile ()
  # message ( TR@CE "XXX" )
  twx_test_simple_assert_fail ()

  twx_test_simple_start ( "i=2000" )
  while (true )
    twx_break_if ( ${i} <> 1000 )
    set ( i 2000 )
    break ()
  endwhile ()
  twx_assert_compare ( ${i} == 2000 )
  twx_test_simple_assert_pass ()

  twx_test_simple_start ( "i=2000(2)" )
  set ( i 2000 )
  while (true )
    twx_break_if ( ${i} <> 1000 )
    set ( i 3000 )
    break ()
  endwhile ()
  twx_assert_compare ( ${i} == 2000 )
  twx_test_simple_assert_pass ()
  endblock ()
endif ()
twx_test_unit_pop ()

endblock ()
twx_test_suite_pop ()

#/*
